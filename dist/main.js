var Client=function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){},function(e,t,n){"use strict";n.r(t),n.d(t,"handleSubmit",(function(){return i})),n.d(t,"getNPLAnalysis",(function(){return o})),n.d(t,"urlValidator",(function(){return l}));const i=e=>{e.preventDefault();let t=document.getElementById("results"),n=document.querySelector(".results-section"),i=document.querySelector(".error"),o=document.getElementById("url");Client.urlValidator(o.value)?Client.getNPLAnalysis("http://localhost:3030/analysis",{url:o.value}).then(e=>{"200"===e.status?(o.value="",t.innerHTML="",r(e,t,n)):(i.style.display="block",i.innerText="The news you specified was not found!",i.addEventListener("mouseover",()=>{i.style.display="none"}))}):(o.value="",i.style.display="block",i.innerText="You entered the wrong url address!",i.addEventListener("mouseover",()=>{i.style.display="none"}))},r=(e,t,n)=>{let i=`\n        <div class="result-info">\n\n            <div class="polarity">Polarity: <b>${e.polarity}</b></div>\n            <div class="polarity-confidence">\n                Polarity confidence: <b>${e.polarity_confidence.toFixed(2)}</b>\n            </div>\n\n            <div class="subjectivity">Subjectivity: <b>${e.subjectivity}</b></div>\n            <div class="subjectivity-confidence">\n                Subjectivity confidence: <b>${e.subjectivity_confidence.toFixed(2)}</b>\n            </div>\n\n            <div class="text">${e.text}</div>\n\n        </div>\n    `;n.style.display="block",t.innerHTML=i},o=async(e="",t={})=>{let n={},i=await fetch(e,{method:"POST",credentials:"same-origin",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});try{return n=await i.json(),n}catch(e){return n.status="Invalid getting data",n}},l=e=>!!/^((http|https):\/\/)?(([A-Z0-9][A-Z0-9_-]*)(\.[A-Z0-9][A-Z0-9_-]*)+)/i.test(e);n(0)}]);